head(req,5)
names(req)
names(req$config)
names(req$times)
names(req$content)
head(req$content,5)
data <- fromJSON("https://api.github.com/users/jtleek/repos")
names(data)
data$created_at
min(data$created_at)
data$owner
names(data)
names(data$created_at)
max(data$created_at)
head(data$name,10)
head(data$id,10)
data$updated_at
min(data$updated_at)
max(data$created_at)
min(data$created_at)
names(data)
head(data$name)
data[[1]]
data[data$name=="datasharing"]
data[data$name=="datasharing",data$created_at]
data[data$name=="datasharing",data$created_at,]
class(data)
x <- subset(data, name =="datasharing", select=created_at)
x
rm(list=ls())
install.packages("mysql")
conn <- dbConnect(MySQL(), user="genome",host="genome-mysql.cse.ucsc.edu")
lnstall.packages("RMySql")
install.packages("RMySQL")
install.packages("rmysql")
install.packages("sqldf")
file <- "c:\\workspace\\data\\acs\\getdata-data-ss06pid.csv"
acs <- read.csv(file)
class(acs)
names(acs)
x <- sqldf("select count(*) from acs")
library(sqldf)
x <- sqldf("select count(*) from acs")
x
sqldf("select pwgtp1 from acs where AGEP < 50")
x <- unique(acs$AGEP)
length(x)
y <- sqldf(select unique AGEP from acs)
y <- sqldf(select distinct AGEP from acs)
y <- sqldf("select distinct AGEP from acs")
length(y)
y
nrow(y)
rm(list)=ls()
rm(list=ls())
con <- url("http://biostat.jhsph.edu/~jleek/contact.html ")
htmlCode <- readLines(con)
close(con)
head(htmlCode)
nrow(htmlCode)
length(htmlCode)
htmlCode[1]
htmlCode[10]
htmlCode(180)
htmlCode[180]
nchar(htmlCode)
x <- htmlCode[10]
x
nchar(x)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
version()
version
data(mtcars)
nrow(mtcars)
mtcars
names(mtcars)
head(mtcars)
df <- mtcars[mtcars$cyl==6,]
nrow(df)
df <- mtcars[mtcars$cyl==6,c("mpg","cyl","disp","hp")]
names(df)
df <- mtcars[mtcars$cyl==6,c("toupper(mpg)","cyl","disp","hp")]
df <- mtcars[mtcars$cyl==6,c(toupper("mpg"),"cyl","disp","hp")]
df <- mtcars[mtcars$cyl==6,c(toupper(mpg),"cyl","disp","hp")]
names(df)
apply(df, 2, mean)
apply(df, 2, function(x) length(x[x > 6]))
nrow(df)
df
names(df)
names(mtcars)
head(mtcars)
rm(list=ls()
rm(list=ls())
data(airquality)
names(airquality)
head(airquality)
rm=ls(list)
rm(list=ls())
df <- data(mtcars)
names(df)
df
data(mtcars)
names(mtcars)
head(mtcars)
head(round(mtcars$mpg))
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data=airquality)
names(airquality)
str(airquality)
df <- airquality
str(df)
df$Month <- factor(df$Month)
str(df)
xyplot(Ozone ~ Wind | Month, data=df,layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data=df)
aggregate(Ozone ~ Month, df)
aggregate(Ozone ~ Month, df, mean)
xyplot(Ozone ~ Wind | Month, data=df,layout=c(5,2))
xyplot(Ozone ~ Wind | Month, data=df,layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data=df,layout=c(5))
xyplot(Ozone ~ Wind | Month, data=df,layout=c(1,5))
xyplot(Ozone ~ Wind | Month, data=df)
xyplot(Ozone ~ Wind, data=df)
x <- xyplot(Ozone ~ Wind, data=df)
x
x <- xyplot(Ozone ~ Month, data=df)
x
class(x)
str(x)
x <- xyplot(Ozone ~ Month, data=df)
x <- xyplot(Ozone ~ Wind, data=df)
x
rm(list=ls())
library(lattice)
library(datasets)
df <- airquality
names(df)
df$Month <- factor(df$Month)
str(df)
xyplot(Ozone ~ Wind, df)
xyplot(Ozone ~ Temp, df)
abline(lm(Ozone ~ Temp))
abline(lm(df$Ozone ~ df$Temp), col="red")
xyplot(Ozone ~ Temp | Month, df, layout=c(5,1))
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x + f - f* x + rnorm(100, sd=0.5)
length(x)
length(f)
length(y)
f <- factor(f, labels=c("Group 1","Group 2"))
xyplot(y ~ x | f, layout=c(2,1))
xyplot(y ~ x | f, panel=function(x,y,...))
xyplot(y ~ x | f, panel=function(x,y,...)) {panel.xyplot(x,y,...) panel.abline(h=median(y),lty=2)}
xyplot(y ~ x | f, panel=function(x,y,...)) {panel.xyplot(x,y,...) panel.abline(h=median(y),lty=2)})
xyplot(y ~ x | f, panel=function(x,y,...)) {panel.xyplot(x,y,...) panel.abline(h=median(y),lty=2)})
xyplot(y ~ x | f, panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
xyplot(Ozone ~ Temp | Month, panel=function(Ozone,Temp,...)
panel.xyplot(Ozone, Temp,...)
panel.abline(h=median(Ozone),lty=2)
})
xyplot(Ozone ~ Temp | Month, panel=function(Ozone,Temp,...) {
panel.xyplot(Ozone, Temp,...)
panel.abline(h=median(Ozone),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(df$Ozone,df$Temp,...) {
panel.xyplot(df$Ozone, df$Temp,...)
panel.abline(h=median(df$Ozone),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y,...) {
panel.xyplot(x,y,layout=c(5,1))
panel.abline(h=median(y),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y,layout=c(5,1)) {
panel.xyplot(x,y,layout=c(5,1))
panel.abline(h=median(y),lty=2)
})
xyplot(Ozone ~ Temp, df)
abline(h=median(df$Temp,lty=2))
abline(h=median(Temp,lty=2))
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y) {
panel.xyplot(x,y)
panel.abline(h=median(y),lty=2)
})
abline(median(df$Temp))
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y) {
panel.xyplot(x,y)
panel.abline(median(y),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y) {
panel.xyplot(x,y)
panel.abline(h=median(y),lty=2)
})
xyplot(df$Ozone ~ df$Temp | df$Month, panel=function(x,y) {
panel.xyplot(x,y)
panel.abline(h=median(x),lty=2)
})
rm(list=ls())
install.packages("ggplot2")
library(ggplot2)
library(datasets)
library(mtcars)
library(mpg)
df <- mpg
names(df)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, col=drv)
names(df)
qplot(displ,hwy,data=mpg, col=cyl)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
library(datasets)
names(mtcars)
str(mtcars)
df <- mtcars
str(df)
library(ggplot2)
qplot(mpg,mtcars)
qplot(mpg, data=mtcars)
qplot(mpg, data=mtcars, col=drv)
qplot(mpg, data=mtcars, fill=drv)
qplot(mpg, data=mpg, fill=drv)
names(df)
qplot(mpg, data=mtcars)
qplot(mpg, data=mtcars, fill=drv)
qplot(mpg, data=mtcars, fill=cyl)
df <- mpg
names(df)
str(df)
qplot(hwy, data=mpg, fill=drv)
qplot(hwy, data=mpg, fill=drv, binwidth = 5)
qplot(hwy, data=mpg, fill=drv, binwidth = 1)
df <- mtcars
str(df)
qplot(mpg, data=mtcars)
qplot(mpg, data=mtcars, binwidth=2)
df$cyl <- factor(df$cyl)
str(df)
qplot(mpg, data=df, binwidth=2)
qplot(mpg, data=df, binwidth=2, fil=cyl)
qplot(mpg, data=df, binwidth=2, fill=cyl)
qplot(mpg, data=df, binwidth=2, fill=cyl,facets=cyl~)
qplot(mpg, data=df, binwidth=2, fill=cyl,facets=cyl~.)
qplot(mpg,hp, data=df,facets=.~hp)
qplot(mpg,cyl, data=df,facets=.~cyl)
df <- maacs
df <- mtcars
names(df)
xyplot(mpg ~ cyl, data=df)
xyplot(df$mpg ~ df$cyl | f, panel=function(x,y,...) {
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
library(lattice)
xyplot(mpg ~ cyl, data=df)
str(df)
x <- xyplot(mpg ~ cyl, data=df)
str(x)
class(x)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
names(nlme)
names(BodyWeight)
head(BodyWeight, 5)
library(ggplot2)
libray(datasets)
library(datasets)
data(airquality)
df <- airquality
names(df)
qplot(Wind, Ozone, data=df)
qplot(wind,Ozone, data=df, geom="smooth")
qplot(Wind,Ozone, data=df, geom="smooth")
qplot(Wind,Ozone,data=df,facets=.~factor(Month))
qplot(Wind,Ozone,data=df,facets= . ~ factor(Month))
df$Month <- factor(df$Month)
qplot(Wind, Ozone, data=df, facets = .~Month)
g <- ggplot(movies, aes(votes,rating))
g
qplot(votes,rating, data=movies)
qplot(voites,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies,smooth="loess")
qplot(voites,rati,data=movies) + geom_smooth()
qplot(votes,rati,data=movies) + geom_smooth()
qplot(votes,rating,data=movies) + geom_smooth()
qplot(votes,rating,data=movies) + stats_smooth("loess")
qunif(.75,0,1)
x < 1:4
x <- 1:4
x
p <- x/sum(x)
p
temp <- rbind(x,p)
temp
rownames(temp) <- c("X","Prob")
temp
mean(temp)
temp$X
mean(temp[1,])
mean(temp[2,])
x <- c(1,2,3,4)
x
mean(x)
pbinom(6,size=8,prob=.5,lower.tail=false)
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(6,size=10,prob=.5,lower.tail=FALSE)
choose(10,9) * .5^10
pbinom(8,10,0.5,lower.tail=FALSE)
exit
quit
exit()
qnorm(5,mean=11, sd=2)
5/11
qnorm(.45,mean=11,sd=2)
pnorm(93, mean=100, sd=10)
(.88 * .95)/(.88 * .95 + .07 * .05)
pnorm(.05, mean=100, sd=10)
round(qnorm(.05, mean=100, sd=10, lower.tail=FALSE))
round(qnorm(.05, mean=100, sd=10/sqrt(50),lower.tail=FALSE))
round(pbinom(4,prob=.5,size=6,lower.tail=false))
round(pbinom(4,prob=.5,size=6,lower.tail=FALSE))
pbinom(4,prob=.5,size=6,lower.tail=FALSE)
pnorm(70, mean=80, sd=10, lower.tail=FALSE)
qnorm(.95, mean=1100, sd=75, lower.tail=FALSE)
qnorm(.95,mean=100, sd.=75, lower.tail=FALSE)
qnorm(.95,mean=100, sd=75, lower.tail=FALSE)
(1100+75=75)
1100+75+75
pbinom(4, prob=.5,size=5,lower.tail=FALSE)
pnorm(14,mean=15,sd=10,lower.tail=FALSE)
ppois(10,lambda=5*3)
pnorm(93, mean=100, sd=10) * 100
pnorm(70, mean=80, sd=10) * 100
qnorm(.95, mean=1100, sd=75)
qnorm(.95, mean=100,sd=10/sqrt(50))
qnorm(.95,mean=1100,sd=75/sqrt(100))
pbinom(4,prob=.5,size=6,lower.tail=FALSE)
pbinom(4,prob=.5,size=5,lower.tail=FALSE)
pbinom(4,prob=.5,size=5,lower.tail=FALSE) * 100
pbinom(5,prob=.5,size=5,lower.tail=FALSE) * 100
pbinom(3,=prob=.5,size=5,lower.tail=FALSE)
pbinom(3,prob=.5,size=5,lower.tail=FALSE)
pbinom(3,prob=.5,size=5,lower.tail=FALSE) * 100
round(pbinom(3,prob=.5,size=5,lower.tail=FALSE) * 100,0)
pnorm(15,mean=15,sd=10) * 100
pnorm(14,mean=15,sd=10) * 100
pnorm(16,mean=15,sd=10) * 100
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
pnorm(1000,mean=.5,sd=sqrt(1/12/100,lower.tail=FALSE))
pnorm(1000,mean=.5,sd=sqrt(1/12/100),lower.tail=FALSE))
pnorm(1000,mean=.5,sd=sqrt(1/12/100),lower.tail=FALSE)
pnorm(100,mean=.5,sd=sqrt(1/12/1000),lower.tail=FALSE)
sqrt(1/12/1000)
sqrt(1/12/1000) * 100
sqrt(1/12)
round(sqrt(1/12))
round(sqrt(1/12),1)
round(sqrt(1/12),2)
sqrt(1/12)
sqrt(1/12)/.5
pexp(2, rate=1/3)
?pexp()
?replicate()
mean(rexp(40,.2))
mean(rexp(40,0.2))
x <- replicate(1000,mean(rexp(40,0,2)))
x <- replicate(1000,mean(rexp(40,0.2)))
head(x)
x <- replicate(1000,round(mean(rexp(40,0.2)),2)
x <- replicate(1000,round(mean(rexp(40,0.2)),2)
x <- replicate(1000,round(mean(rexp(40,0.2)),2))
head(x)
length(x)
library(ggplots)
g <- ggplot(data.frame(x=1:n,y=means),aes(x=x,y=y))
library(ggplot2)
n <- 10000
means <- cumsum(rnorm(n))/ (1:n)
library(ggplot2)
g <- ggplot(data.frame(x=1:n,y=means),aes(x=x,y=y))
g + geom_hline(yintercept=0) + geom_line(size=2)
g <- g + geom_hline(yintercept=0) + geom_line(size=2)
g <- labs(x="Number of obs",y="Cumulative mean")
g
g <- g + labs(x="Number of obs",y="Cumulative mean")
lambda = 0.2
n = 40
nsims = 1:1000
set.seed(820)
means <- data.frame(x = sapply(nsims, function(x)
{mean(rexp(n, lambda))}))
head(means)
means <- replicate(mean(rexp(n,lambda)))
means <- replicate(1000,mean(rexp(n,lambda)))
head(means)
lambda = 0.2
n = 40
nsims = 1:1000
set.seed(820)
#means <- data.frame(x = sapply(nsims, function(x)
#{mean(rexp(n, lambda))}))
means <- replicate(nsims,mean(rexp(n,lambda)))
head(means)
getwd()
dir()
setwd("c:\\workspace\\git-repos\\datasciencecoursera\\statinfer")
dir()
source("statinfer-project.R")
x <- replicate(1:1000,mean(rexp(40,.2)))
lambda = 0.2
n = 40
set.seed(100)
df <- data.frame(replicate(1000,mean(rexp(40,.2))))
str(df)
head(df)
names(df) <- "mean_value"
names(df)
head(df)
mean(df$mean_value)
sd(df$mean_vallue)
var(df$mean_value)
ggplot(data=df, aes(x=mean_value)) +
geom_histogram(aes(y=..density..)) +
binwidth=.20 +
stat_function(fun=dnorm, arg=list(mean=5,sd=sd(df$mean_value)))
mean(df$mean_value)
sd(df$mean_vallue)
var(df$mean_value)
x <- paste("The mean value of exponential distribution is ", mean(df$mean_value),".  The standard deviation is ",sd(df$) )
x <- paste("The mean value of exponential distribution is ", mean(df$mean_value),".  The standard deviation is ",sd(df$) )
m <- mean(df$mean_value)
s <- sd(df$mean_vallue)
v <- var(df$mean_value)
print(paste("The mean value is ",m,".  The standard deviation is ", s, " and the variance is ",v))
print(paste("The mean value is ",m,".  The standard deviation is ", s, " and the variance is ",v,sep=""))
dir()
str(df)
head(df)
ggplot(data=df) + geom_histogram(aes(x=mean_value))
ggplot(data=df) + geom_histogram(aes(x=mean_value),bindwidth=5)
range(df$mean_value)
ggplot(data=df) + geom_histogram(aes(x=mean_value),bindwidth=.5)
ggplot(data=df) + geom_histogram(aes(x=mean_value),binwidth=.5)
ggplot(data=df) + geom_histogram(aes(x=mean_value),binwidth=.1)
ggplot(data=df) + geom_histogram(aes(x=mean_value),binwidth=.2)
ggplot(data=df, aes(x=x)) + geom_histogram(aes(y=..density..),binwidth=0.20)
ggplot(data=df, aes(x=mean_value)) + geom_histogram(aes(y=..density..),binwidth=0.20)
g <- ggplot(data=df)
g <- g + geom_histogram(aes(x=mean_value), binwidth=.20)
g
g <- g + stat_function(fun=dnorm,arg=list(mean=5,sd=sd(df$mean_value)))
g
rm(g)
g <- ggplot(data=df, aes(x=mean_value))
g <- g + geom_histogram(aes(y=..density..),binwidth=0.20)
g <- g + stat_function(fun=dnorm, arg=list(mean=5,sd=sd(df$mean_value)))
g
g <- g + geom_histogram(aes(y=..density..),binwidth=0.20,color="red")
g <- g + stat_function(fun=dnorm, arg=list(mean=5,sd=sd(df$mean_value)))
g
g <- g + geom_histogram(aes(y=..density..),binwidth=0.20,color="red", fill="red")
g <- g + stat_function(fun=dnorm, arg=list(mean=5,sd=sd(df$mean_value)))
g
g <- g + geom_histogram(aes(y=..density..),binwidth=0.20,color="black", fill="light blue")
g <- g + stat_function(fun=dnorm, arg=list(mean=5,sd=sd(df$mean_value)))
g
g <- g + stat_function(fun=dnorm, arg=list(mean=1/0.2,sd=sd(df$mean_value)))
g
sd(df$mean_value)
round(sd(df$mean_value),2)
round(var(df$mean_value),2)
mean(df$mean_value)
(1/lambda)/sqrt(40)
(1/lambda)/sqrt(40) ^ .2
((1/lambda)/sqrt(40)) ^ 2
g <- ggplot(data=df, aes(x=mean_value))
g <- g + geom_histogram(aes(y=..density..), binwidth=0.20, fill="light blue", color="black")
g <- g + stat_function(fun=dnorm, arg=list(mean=1/lambda, sd=sd(df$mean_value)))
g <- ggplot(data=df, aes(x=mean_value))
g <- g + geom_histogram(aes(y=..density..), binwidth=0.20, fill="light blue", color="red")
g <- g + stat_function(fun=dnorm, arg=list(mean=1/lambda, sd=sd(df$mean_value)))
summary(df)
mean(df$mean_value) + c(-1,1)*1.96*sd(df$mean_value)/sqrt(nrow(df))
round(df$mean_value)
mean(df$mean_value) + c(-1,1) * 1.96 * sd(df$mean_value)/sqrt(nrow(df))
rm(list=ls())
data(toothgrowth)
load(datasets)
library("datasets")
load(toothgrowth)
str(toothgrowth)
library(help="datasets")
str(ToothGrowth)
nrow(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
g <- ggplot(data=ToothGrowth)
g <- g+ geom_histogram(aes(x=supp))
g
